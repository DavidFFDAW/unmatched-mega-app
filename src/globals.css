* {
	margin: 0;
	text-decoration: none;
	box-sizing: border-box;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu,
		Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
body {
	background: #fdfdfd;
}

a {
	color: #383838;
}

.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.fixed {
	position: fixed;
}
.sticky {
	position: sticky;
}
.block {
	display: block;
}
.top0 {
	top: 0;
}
.right0 {
	right: 0;
}
.bottom0 {
	bottom: 0;
}
.left0 {
	left: 0;
}
.flex {
	display: flex;
}
.column {
	flex-direction: column;
}
.row {
	flex-direction: row;
}
.wrap {
	flex-wrap: wrap;
}
.nowrap {
	flex-wrap: nowrap;
}
.wrapreverse {
	flex-wrap: wrap-reverse;
}
.f1 {
	flex: 1;
}
.fauto {
	flex: auto;
}
.finitial {
	flex: initial;
}
.fnone {
	flex: none;
}
.fgrow {
	flex-grow: 1;
}
.fshrink {
	flex-shrink: 1;
}
.fno-grow {
	flex-grow: 0;
}
.fno-shrink {
	flex-shrink: 0;
}
.start {
	justify-content: flex-start;
}
.end {
	justify-content: flex-end;
}
.center {
	justify-content: center;
}
.between {
	justify-content: space-between;
}
.around {
	justify-content: space-around;
}
.evenly {
	justify-content: space-evenly;
}
.astart {
	align-items: flex-start;
}
.aend {
	align-items: flex-end;
}
.acenter {
	align-items: center;
}
.abaseline {
	align-items: baseline;
}
.astretch {
	align-items: stretch;
}
.cntstart {
	align-content: flex-start;
}
.cntend {
	align-content: flex-end;
}
.cntcenter {
	align-content: center;
}
.cntbetween {
	align-content: space-between;
}
.cntaround {
	align-content: space-around;
}
.cntstretch {
	align-content: stretch;
}
.slfauto {
	align-self: auto;
}
.slfstart {
	align-self: flex-start;
}
.slfend {
	align-self: flex-end;
}
.slfcenter {
	align-self: center;
}
.slfstretch {
	align-self: stretch;
}
.gap {
	gap: 35px;
}
.gap-small {
	gap: 15px;
}
.gap-smaller {
	gap: 10px;
}
.gap-5 {
	gap: 5px;
}
.grid {
	display: grid;
}
.grid.grid-admin-links {
	grid-template-columns: repeat(4, 1fr);
	place-content: center;
	place-items: center;
}
.place-items {
	place-items: center;
}
.w1 {
	width: 100%;
}
.w90 {
	width: 90%;
}
.minh1 {
	min-height: 100%;
}
.minh1v {
	min-height: 99vh;
}
.h1vh {
	height: 100vh;
}
.h1 {
	height: 100%;
}

.down {
	margin-top: 50px;
}
.pdown {
	padding-top: 50px;
}

.upper {
	text-transform: uppercase;
}
.lower {
	text-transform: lowercase;
}
.capital {
	text-transform: capitalize;
}
.narrow {
	font-weight: 400;
	font-family: 'narrow', system-ui, 'Segoe UI', Roboto, Oxygen, sans-serif;
}
.bebas {
	font-weight: 400;
	font-family: 'bebas', system-ui, 'Segoe UI', Roboto, Oxygen, sans-serif;
}
.league {
	font-weight: 400;
	font-family: 'league', system-ui, 'Segoe UI', Roboto, Oxygen, sans-serif;
}

.btn {
	position: relative;
	display: block;
	padding: 12px 30px;
	border: 2px solid #333;
	color: #333;
	font-size: 18px;
	text-align: center;
	text-decoration: none;
	transition: 0.3s;
	cursor: pointer;
}
.btn.fill::before {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: -1;
	content: '';
	background: #fcbd71;
	transition: transform 0.3s;
}
.btn.fill:hover {
	color: #000000;
}

.btn.fill::before {
	transform-origin: right top;
	transform: scale(0, 1);
}
.btn.fill:hover::before {
	transform-origin: left top;
	transform: scale(1, 1);
}

.main-app-layout {
	padding: 10px;
	margin: 0 10px;
}
.box {
	position: relative;
	background: #fff;
	min-width: 150px;
	/* aspect-ratio: 9 / 16; */
	min-height: 50px;
	padding: 5px;
	box-shadow: 0 0 100px 2px rgba(0, 0, 0, 0.1);
	border-radius: 5px;
	z-index: 5;
}
.box.p {
	padding: 20px;
}
.link .box {
	min-width: 330px;
	height: 275px;
	transition: all 0.2s ease-in-out;
}
.link .box:hover {
	background: #c2c2c2;
}
.link .box:hover .landing-link-image {
	filter: sepia();
}

.landing-link-image {
	width: 75%;
	height: auto;
	padding: 5px;
}
.landing-link-image.dials {
	width: 190px;
	border-radius: 50%;
	background-color: #fff;
}
.landing-link-image.cards {
	width: 225px;
}
.landing-link-image.printer {
	width: 225px;
}
.landing-link-image.card-back {
	width: 150px;
}
.landing-link-image.unlimited {
	width: 203px;
	border-radius: 10px;
}

dialog[open] {
	animation: show 1s ease normal;
}
keyframes show {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@media screen and (max-width: 768px) {
	.flex-responsive {
		flex-wrap: wrap;
	}
}
